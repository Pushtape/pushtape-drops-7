<?php
/**
* Implement hook_install().
*
* Perform actions to set up the site for this profile.
*/
function pushtape_install() {  
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html', 
    'name' => 'Filtered HTML', 
    'weight' => 0, 
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0, 
        'status' => 1,
      ),
      // HTML filter. 
      'filter_html' => array(
        'weight' => 1, 
        'status' => 1,
      ),
      // Line break filter. 
      'filter_autop' => array(
        'weight' => 2, 
        'status' => 1,
      ),
      // HTML corrector filter. 
      'filter_htmlcorrector' => array(
        'weight' => 10, 
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html', 
    'name' => 'Full HTML', 
    'weight' => 1, 
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0, 
        'status' => 1,
      ),
      // Line break filter. 
      'filter_autop' => array(
        'weight' => 1, 
        'status' => 1,
      ),
      // HTML corrector filter. 
      'filter_htmlcorrector' => array(
        'weight' => 10, 
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);


  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  $root = user_load(array('uid' => 1));
  
  // Create user/2
  $new_user = array(
        'name' => 'artist',
        'pass' => $root->pass,
        'mail' => $root->mail,
        'init' => $root->mail,
        'status' => 1,
  );
 
  // $account returns user object
  $account = user_save(null, $new_user);
  
  // Create a default role for artists, with all available permissions assigned.
  $artist_role = new stdClass();
  $artist_role->name = 'artist';
  $artist_role->weight = 2;
  user_role_save($artist_role);
  //user_role_grant_permissions($artist_role->rid, array_keys(module_invoke_all('permission')));

  // Assign user 2 the "artist" role.
  db_insert('users_roles')
    ->fields(array('uid' => 2, 'rid' => $artist_role->rid))
    ->execute();


  // Update the menu router information.
  menu_rebuild();
 
  // New accounts made by administrators only.
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));
  
  // Enable themes
  theme_enable(array('flux', 'seven', 'pushtape_wireframe'));
  variable_set('admin_theme', 'seven');
  variable_set('theme_default', 'flux');
  variable_set('site_frontpage', 'discography');
  // variable_set('clean_url', 1);
  //variable_set('site_footer', 'Built with Pushtape');
  // variable_set('node_admin_theme', '1');  

}

